//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// Этот исходный код был создан с помощью wsdl, версия=4.6.1055.0.
// 
namespace Valeant.Sp.UprsWeb.Controllers.Utils.Navision
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
  //  [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "GetEmployeeLedgerEntries_Binding", Namespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries")]
    public partial class GetEmployeeLedgerEntries_Service : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ReadOperationCompleted;

        private System.Threading.SendOrPostCallback ReadByRecIdOperationCompleted;

        private System.Threading.SendOrPostCallback ReadMultipleOperationCompleted;

        private System.Threading.SendOrPostCallback IsUpdatedOperationCompleted;

        private System.Threading.SendOrPostCallback GetRecIdFromKeyOperationCompleted;

        /// <remarks/>
        public GetEmployeeLedgerEntries_Service()
        {
            this.Url = "http://seurzwnavd.valeant.corp.vrx:7137/NAV_71_CY_RU_DEV/WS/VAL%20RU%20PRD%20COPY" +
                "%20(20160122)/Page/GetEmployeeLedgerEntries";
        }

        public GetEmployeeLedgerEntries_Service(string url)
        {
            this.Url = url;
        }


        /// <remarks/>
        public event ReadCompletedEventHandler ReadCompleted;

        /// <remarks/>
        public event ReadByRecIdCompletedEventHandler ReadByRecIdCompleted;

        /// <remarks/>
        public event ReadMultipleCompletedEventHandler ReadMultipleCompleted;

        /// <remarks/>
        public event IsUpdatedCompletedEventHandler IsUpdatedCompleted;

        /// <remarks/>
        public event GetRecIdFromKeyCompletedEventHandler GetRecIdFromKeyCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/getemployeeledgerentries:Read", RequestNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", ResponseElementName = "Read_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetEmployeeLedgerEntries")]
        public GetEmployeeLedgerEntries Read(int Entry_No)
        {
            object[] results = this.Invoke("Read", new object[] {
                    Entry_No});
            return ((GetEmployeeLedgerEntries)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRead(int Entry_No, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Read", new object[] {
                    Entry_No}, callback, asyncState);
        }

        /// <remarks/>
        public GetEmployeeLedgerEntries EndRead(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetEmployeeLedgerEntries)(results[0]));
        }

        /// <remarks/>
        public void ReadAsync(int Entry_No)
        {
            this.ReadAsync(Entry_No, null);
        }

        /// <remarks/>
        public void ReadAsync(int Entry_No, object userState)
        {
            if ((this.ReadOperationCompleted == null))
            {
                this.ReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadOperationCompleted);
            }
            this.InvokeAsync("Read", new object[] {
                    Entry_No}, this.ReadOperationCompleted, userState);
        }

        private void OnReadOperationCompleted(object arg)
        {
            if ((this.ReadCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/getemployeeledgerentries:ReadByRecId", RequestNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", ResponseElementName = "ReadByRecId_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetEmployeeLedgerEntries")]
        public GetEmployeeLedgerEntries ReadByRecId(string recId)
        {
            object[] results = this.Invoke("ReadByRecId", new object[] {
                    recId});
            return ((GetEmployeeLedgerEntries)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginReadByRecId(string recId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReadByRecId", new object[] {
                    recId}, callback, asyncState);
        }

        /// <remarks/>
        public GetEmployeeLedgerEntries EndReadByRecId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetEmployeeLedgerEntries)(results[0]));
        }

        /// <remarks/>
        public void ReadByRecIdAsync(string recId)
        {
            this.ReadByRecIdAsync(recId, null);
        }

        /// <remarks/>
        public void ReadByRecIdAsync(string recId, object userState)
        {
            if ((this.ReadByRecIdOperationCompleted == null))
            {
                this.ReadByRecIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadByRecIdOperationCompleted);
            }
            this.InvokeAsync("ReadByRecId", new object[] {
                    recId}, this.ReadByRecIdOperationCompleted, userState);
        }

        private void OnReadByRecIdOperationCompleted(object arg)
        {
            if ((this.ReadByRecIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadByRecIdCompleted(this, new ReadByRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
       // [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/getemployeeledgerentries:ReadMultiple", RequestNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", ResponseElementName = "ReadMultiple_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
      //  [return: System.Xml.Serialization.XmlArrayAttribute("ReadMultiple_Result")]
        public GetEmployeeLedgerEntries[] ReadMultiple([System.Xml.Serialization.XmlElementAttribute("filter")] GetEmployeeLedgerEntries_Filter[] filter, string bookmarkKey, int setSize)
        {
            string Name= "ReadMultiple";

            object[] results = this.Invoke(Name, new object[] {
                    filter,
                    bookmarkKey,
                    setSize});
            return ((GetEmployeeLedgerEntries[])(results[0]));
        }


        public GetEmployeeLedgerEntries[] ReadMultiple()
        {
            GetEmployeeLedgerEntries_Filter filter = new GetEmployeeLedgerEntries_Filter(GetEmployeeLedgerEntries_Fields.Vendor_No,"");

            object[] results = this.Invoke("ReadMultipleMy", new object[] {
                    filter,
                    "",
                    0});
            return ((GetEmployeeLedgerEntries[])(results[0]));
        }



        /// <remarks/>
        public System.IAsyncResult BeginReadMultiple(GetEmployeeLedgerEntries_Filter[] filter, string bookmarkKey, int setSize, System.AsyncCallback callback, object asyncState)
        {


            return this.BeginInvoke("ReadMultiple", new object[] {
                    filter,
                    bookmarkKey,
                    setSize}, callback, asyncState);
        }

        /// <remarks/>
        public GetEmployeeLedgerEntries[] EndReadMultiple(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((GetEmployeeLedgerEntries[])(results[0]));
        }

        /// <remarks/>
        public void ReadMultipleAsync(GetEmployeeLedgerEntries_Filter[] filter, string bookmarkKey, int setSize)
        {
            this.ReadMultipleAsync(filter, bookmarkKey, setSize, null);
        }

        /// <remarks/>
        public void ReadMultipleAsync(GetEmployeeLedgerEntries_Filter[] filter, string bookmarkKey, int setSize, object userState)
        {
            if ((this.ReadMultipleOperationCompleted == null))
            {
                this.ReadMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMultipleOperationCompleted);
            }
            this.InvokeAsync("ReadMultiple", new object[] {
                    filter,
                    bookmarkKey,
                    setSize}, this.ReadMultipleOperationCompleted, userState);
        }

        private void OnReadMultipleOperationCompleted(object arg)
        {
            if ((this.ReadMultipleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMultipleCompleted(this, new ReadMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/getemployeeledgerentries:IsUpdated", RequestNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", ResponseElementName = "IsUpdated_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("IsUpdated_Result")]
        public bool IsUpdated(string Key)
        {
            object[] results = this.Invoke("IsUpdated", new object[] {
                    Key});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsUpdated(string Key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsUpdated", new object[] {
                    Key}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsUpdated(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsUpdatedAsync(string Key)
        {
            this.IsUpdatedAsync(Key, null);
        }

        /// <remarks/>
        public void IsUpdatedAsync(string Key, object userState)
        {
            if ((this.IsUpdatedOperationCompleted == null))
            {
                this.IsUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUpdatedOperationCompleted);
            }
            this.InvokeAsync("IsUpdated", new object[] {
                    Key}, this.IsUpdatedOperationCompleted, userState);
        }

        private void OnIsUpdatedOperationCompleted(object arg)
        {
            if ((this.IsUpdatedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUpdatedCompleted(this, new IsUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/page/getemployeeledgerentries:GetRecIdFromKey", RequestNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", ResponseElementName = "GetRecIdFromKey_Result", ResponseNamespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetRecIdFromKey_Result")]
        public string GetRecIdFromKey(string Key)
        {
            object[] results = this.Invoke("GetRecIdFromKey", new object[] {
                    Key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRecIdFromKey(string Key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRecIdFromKey", new object[] {
                    Key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetRecIdFromKey(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key)
        {
            this.GetRecIdFromKeyAsync(Key, null);
        }

        /// <remarks/>
        public void GetRecIdFromKeyAsync(string Key, object userState)
        {
            if ((this.GetRecIdFromKeyOperationCompleted == null))
            {
                this.GetRecIdFromKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecIdFromKeyOperationCompleted);
            }
            this.InvokeAsync("GetRecIdFromKey", new object[] {
                    Key}, this.GetRecIdFromKeyOperationCompleted, userState);
        }

        private void OnGetRecIdFromKeyOperationCompleted(object arg)
        {
            if ((this.GetRecIdFromKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecIdFromKeyCompleted(this, new GetRecIdFromKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries")]
    public partial class GetEmployeeLedgerEntries
    {

        private string keyField;

        private int entry_NoField;

        private bool entry_NoFieldSpecified;

        private string vendor_NoField;

        private int vendor_Ledger_Entry_NoField;

        private bool vendor_Ledger_Entry_NoFieldSpecified;

        private Entry_Type entry_TypeField;

        private bool entry_TypeFieldSpecified;

        private Document_Type document_TypeField;

        private bool document_TypeFieldSpecified;

        private string document_NoField;

        private decimal amount_LCYField;

        private bool amount_LCYFieldSpecified;

        private int applied_Vend_Ledger_Entry_NoField;

        private bool applied_Vend_Ledger_Entry_NoFieldSpecified;

        private bool unappliedField;

        private bool unappliedFieldSpecified;

        private int unapplied_by_Entry_NoField;

        private bool unapplied_by_Entry_NoFieldSpecified;

        /// <remarks/>
        public string Key
        {
            get
            {
                return this.keyField;
            }
            set
            {
                this.keyField = value;
            }
        }

        /// <remarks/>
        public int Entry_No
        {
            get
            {
                return this.entry_NoField;
            }
            set
            {
                this.entry_NoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Entry_NoSpecified
        {
            get
            {
                return this.entry_NoFieldSpecified;
            }
            set
            {
                this.entry_NoFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string Vendor_No
        {
            get
            {
                return this.vendor_NoField;
            }
            set
            {
                this.vendor_NoField = value;
            }
        }

        /// <remarks/>
        public int Vendor_Ledger_Entry_No
        {
            get
            {
                return this.vendor_Ledger_Entry_NoField;
            }
            set
            {
                this.vendor_Ledger_Entry_NoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Vendor_Ledger_Entry_NoSpecified
        {
            get
            {
                return this.vendor_Ledger_Entry_NoFieldSpecified;
            }
            set
            {
                this.vendor_Ledger_Entry_NoFieldSpecified = value;
            }
        }

        /// <remarks/>
        public Entry_Type Entry_Type
        {
            get
            {
                return this.entry_TypeField;
            }
            set
            {
                this.entry_TypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Entry_TypeSpecified
        {
            get
            {
                return this.entry_TypeFieldSpecified;
            }
            set
            {
                this.entry_TypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public Document_Type Document_Type
        {
            get
            {
                return this.document_TypeField;
            }
            set
            {
                this.document_TypeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Document_TypeSpecified
        {
            get
            {
                return this.document_TypeFieldSpecified;
            }
            set
            {
                this.document_TypeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string Document_No
        {
            get
            {
                return this.document_NoField;
            }
            set
            {
                this.document_NoField = value;
            }
        }

        /// <remarks/>
        public decimal Amount_LCY
        {
            get
            {
                return this.amount_LCYField;
            }
            set
            {
                this.amount_LCYField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Amount_LCYSpecified
        {
            get
            {
                return this.amount_LCYFieldSpecified;
            }
            set
            {
                this.amount_LCYFieldSpecified = value;
            }
        }

        /// <remarks/>
        public int Applied_Vend_Ledger_Entry_No
        {
            get
            {
                return this.applied_Vend_Ledger_Entry_NoField;
            }
            set
            {
                this.applied_Vend_Ledger_Entry_NoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Applied_Vend_Ledger_Entry_NoSpecified
        {
            get
            {
                return this.applied_Vend_Ledger_Entry_NoFieldSpecified;
            }
            set
            {
                this.applied_Vend_Ledger_Entry_NoFieldSpecified = value;
            }
        }

        /// <remarks/>
        public bool Unapplied
        {
            get
            {
                return this.unappliedField;
            }
            set
            {
                this.unappliedField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnappliedSpecified
        {
            get
            {
                return this.unappliedFieldSpecified;
            }
            set
            {
                this.unappliedFieldSpecified = value;
            }
        }

        /// <remarks/>
        public int Unapplied_by_Entry_No
        {
            get
            {
                return this.unapplied_by_Entry_NoField;
            }
            set
            {
                this.unapplied_by_Entry_NoField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Unapplied_by_Entry_NoSpecified
        {
            get
            {
                return this.unapplied_by_Entry_NoFieldSpecified;
            }
            set
            {
                this.unapplied_by_Entry_NoFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries")]
    public enum Entry_Type
    {

        /// <remarks/>
        Initial_Entry,

        /// <remarks/>
        Application,

        /// <remarks/>
        Unrealized_Loss,

        /// <remarks/>
        Unrealized_Gain,

        /// <remarks/>
        Realized_Loss,

        /// <remarks/>
        Realized_Gain,

        /// <remarks/>
        Payment_Discount,

        /// <remarks/>
        Payment_Discount_VAT_Excl,

        /// <remarks/>
        Payment_Discount_VAT_Adjustment,

        /// <remarks/>
        Appln_Rounding,

        /// <remarks/>
        Correction_of_Remaining_Amount,

        /// <remarks/>
        Payment_Tolerance,

        /// <remarks/>
        Payment_Discount_Tolerance,

        /// <remarks/>
        Payment_Tolerance_VAT_Excl,

        /// <remarks/>
        Payment_Tolerance_VAT_Adjustment,

        /// <remarks/>
        Payment_Discount_Tolerance_VAT_Excl,

        /// <remarks/>
        Payment_Discount_Tolerance_VAT_Adjustment,

        /// <remarks/>
        US_GAAP_Unrealized_Loss,

        /// <remarks/>
        US_GAAP_Unrealized_Gain,

        /// <remarks/>
        US_GAAP_Realized_Loss,

        /// <remarks/>
        US_GAAP_Realized_Gain,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries")]
    public enum Document_Type
    {

        /// <remarks/>
        _blank_,

        /// <remarks/>
        Payment,

        /// <remarks/>
        Invoice,

        /// <remarks/>
        Credit_Memo,

        /// <remarks/>
        Finance_Charge_Memo,

        /// <remarks/>
        Reminder,

        /// <remarks/>
        Refund,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries")]
    public partial class GetEmployeeLedgerEntries_Filter
    {

        public GetEmployeeLedgerEntries_Filter()
        {

        }

        public GetEmployeeLedgerEntries_Filter(GetEmployeeLedgerEntries_Fields field, string criteria) {

            this.fieldField = field;
            this.criteriaField = criteria;

        }
             


        private GetEmployeeLedgerEntries_Fields fieldField;

        private string criteriaField;

        /// <remarks/>
        public GetEmployeeLedgerEntries_Fields Field
        {
            get
            {
                return this.fieldField;
            }
            set
            {
                this.fieldField = value;
            }
        }

        /// <remarks/>
        public string Criteria
        {
            get
            {
                return this.criteriaField;
            }
            set
            {
                this.criteriaField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "urn:microsoft-dynamics-schemas/page/getemployeeledgerentries")]
    public enum GetEmployeeLedgerEntries_Fields
    {

        /// <remarks/>
        Entry_No,

        /// <remarks/>
        Vendor_No,

        /// <remarks/>
        Vendor_Ledger_Entry_No,

        /// <remarks/>
        Entry_Type,

        /// <remarks/>
        Document_Type,

        /// <remarks/>
        Document_No,

        /// <remarks/>
        Amount_LCY,

        /// <remarks/>
        Applied_Vend_Ledger_Entry_No,

        /// <remarks/>
        Unapplied,

        /// <remarks/>
        Unapplied_by_Entry_No,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public GetEmployeeLedgerEntries Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((GetEmployeeLedgerEntries)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void ReadByRecIdCompletedEventHandler(object sender, ReadByRecIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadByRecIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadByRecIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public GetEmployeeLedgerEntries Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((GetEmployeeLedgerEntries)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void ReadMultipleCompletedEventHandler(object sender, ReadMultipleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReadMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public GetEmployeeLedgerEntries[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((GetEmployeeLedgerEntries[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void IsUpdatedCompletedEventHandler(object sender, IsUpdatedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void GetRecIdFromKeyCompletedEventHandler(object sender, GetRecIdFromKeyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecIdFromKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRecIdFromKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}